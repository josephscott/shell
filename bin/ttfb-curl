#!/bin/bash

tmpfile=$(mktemp /tmp/ttfb-curl.XXXXXX)

for i in {0..100}
do
	curl -w "%{time_total}\n" -s -o /dev/null "$@" >> "$tmpfile"
done

sort -o "$tmpfile" "$tmpfile"

min=$(sed '1q;d' "$tmpfile")
p50=$(sed '51q;d' "$tmpfile")
p75=$(sed '76q;d' "$tmpfile")
p90=$(sed '91q;d' "$tmpfile")
p95=$(sed '96q;d' "$tmpfile")
p99=$(sed '100q;d' "$tmpfile")
max=$(sed '101q;d' "$tmpfile")

avg=$(awk '{ sum += $1 } END { print( sum / NR ) }' "$tmpfile")

# https://stackoverflow.com/a/15101429
stddev=$(awk '
{
	sum += $1;
	sumsq += $1 * $1
} END {
	print sqrt( sumsq / NR - ( sum / NR ) ** 2 )
}' "$tmpfile")

echo
echo "*** Of 101 requests ***"
echo
echo "p50 = $p50"
echo "p75 = $p75"
echo "p90 = $p90"
echo "p95 = $p95"
echo "p99 = $p99"
echo
echo "min    = $min"
echo "avg    = $avg"
echo "max    = $max"
echo "stddev = $stddev"
echo

# https://stackoverflow.com/a/49738167
awk -v size=0.1 '
BEGIN { delta = ( delta == "" ? 0.1 : delta ) }
{
	bucketNr = int( ( $0 + delta ) / delta )
	cnt[bucketNr]++
	numBuckets = (numBuckets > bucketNr ? numBuckets : bucketNr)
}
END {
	for ( bucketNr=1; bucketNr <= numBuckets; bucketNr++ ) {
		end = beg + delta
		printf "%0.1f %0.1f %d\n", beg, end, cnt[bucketNr]
		beg = end
	}
}' "$tmpfile"

echo

rm "$tmpfile"
